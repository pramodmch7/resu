{"version":3,"sources":["staticfiles/imgs/C0.svg","staticfiles/imgs/C1.svg","Datas/FetchData.js","comps/PrPer.js","comps/PrAme.js","comps/PrSki.js","comps/PrExp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","axios","require","getData","get","headers","then","data","DaPra","feed","entry","map","m","mm","title","$t","charAt","push","content","PrPer","useState","PaPer","PaPerF","mov","movF","movm","movmF","useEffect","paper","da","a","length","undefined","per","console","log","className","src","alt","onMouseOver","onMouseOut","href","phonne","width","height","target","mail","PrAme","PaAme","PaAmeF","paame","ame","PrSki","PaSki","PaSkiF","paski","ski","style","b","key","split","PrExp","props","state","PaExp","exp","setState","this","e","ex","Component","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.05175286.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/C0.4e39a3d0.svg\";","module.exports = __webpack_public_path__ + \"static/media/C1.b682590c.svg\";","const axios = require(\"axios\");\r\n//'https://docs.google.com/spreadsheets/d/13RomIsQ18QvhKVjwOMJtIl4_fJDXyb_h9Ig9uN5jIC4/edit?usp=sharing'\r\nconst li =\r\n  //\"https://spreadsheets.google.com/feeds/cells/1ICVn8TbCCn-FxC1GjxB2gdygsSp63IUbJs6at3C0QbQ/od6/public/basic?alt=json\";\r\n  \"https://spreadsheets.google.com/feeds/cells/13RomIsQ18QvhKVjwOMJtIl4_fJDXyb_h9Ig9uN5jIC4/od6/public/basic?alt=json\";\r\n\r\nconst getData = () => {\r\n  return axios\r\n    .get(li, { headers: { \"Content-Type\": \"application / json\" } })\r\n    .then((data) => {\r\n      let DaPra = [];\r\n      data.data.feed.entry.map((m, mm) => {\r\n        if (m.title.$t.charAt(0) === \"A\") {\r\n          DaPra.push({ [\"ski\"]: m.content.$t });\r\n        }\r\n        if (m.title.$t.charAt(0) === \"B\") {\r\n          DaPra.push({ [\"per\"]: m.content.$t });\r\n        }\r\n        if (m.title.$t.charAt(0) === \"C\") {\r\n          DaPra.push({ [\"ame\"]: m.content.$t });\r\n        }\r\n        if (m.title.$t.charAt(0) === \"D\") {\r\n          DaPra.push({ [\"exp\"]: m.content.$t });\r\n        }\r\n      });\r\n      return DaPra;\r\n    });\r\n};\r\n\r\nexport default getData;\r\n","import React, { useState, useEffect } from \"react\";\r\n// import { Link, Router } from \"react-router-dom\";\r\nimport getData from \"../Datas/FetchData\";\r\nimport phonne from \"../staticfiles/imgs/C0.svg\";\r\nimport mail from \"../staticfiles/imgs/C1.svg\";\r\n\r\nfunction PrPer() {\r\n  const [PaPer, PaPerF] = useState([]);\r\n  const [mov, movF] = useState(false);\r\n  const [movm, movmF] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let paper = [];\r\n    getData().then((da) => {\r\n      for (let a = 0; a < da.length; a++) {\r\n        if (da[a].per !== undefined) {\r\n          paper.push(da[a].per);\r\n        }\r\n      }\r\n      PaPerF(paper);\r\n    });\r\n  }, []);\r\n  // console.log(PaPer);\r\n  console.log(mov);\r\n  // const mouse = (event) => {\r\n  //   event.target.style.visibility = \"visible\";\r\n  //   console.log(event.target.title);\r\n  // };\r\n  return (\r\n    <div className=\"CONTMAIN\">\r\n      <div className=\"PrPho\">\r\n        <img src={PaPer[0]} alt=\"Pramod\" />\r\n      </div>\r\n      <div className=\"PrNam\">\r\n        <h3 className=\"TAL\">{PaPer[1]}</h3>\r\n      </div>\r\n      <h2 className=\"LMA TAL\">___________</h2>\r\n      <div className=\"PrCon\">\r\n        <span\r\n          className=\"CON BOSH C0\"\r\n          onMouseOver={() => movF(true)}\r\n          onMouseOut={() => movF(false)}\r\n        >\r\n          {mov ? <span>{PaPer[2]}</span> : null}\r\n          <a href={`tel:// ${PaPer[2]}`}>\r\n            <img src={phonne} width=\"25\" height=\"25\" alt=\"Phone\" />\r\n          </a>\r\n        </span>\r\n        <span\r\n          className=\"CON BOSH C1\"\r\n          onMouseOver={() => movmF(true)}\r\n          onMouseOut={() => movmF(false)}\r\n        >\r\n          {movm ? <span>{PaPer[3]}</span> : null}\r\n          <a href={`mailto:${PaPer[3]}`} target=\"_blank\">\r\n            <img src={mail} width=\"25\" height=\"25\" alt=\"Mail\" />\r\n          </a>\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrPer;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport getData from \"../Datas/FetchData\";\r\n\r\nlet PrAme = () => {\r\n  const [PaAme, PaAmeF] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let paame = [];\r\n    getData().then((da) => {\r\n      for (let a = 0; a < da.length; a++) {\r\n        if (da[a].ame !== undefined) {\r\n          paame.push(da[a].ame);\r\n        }\r\n      }\r\n      PaAmeF(paame);\r\n    });\r\n  }, []);\r\n  //   console.log(PaAme);\r\n  return (\r\n    <div className=\"CONTMAIN\">\r\n      <h4>About Me:</h4>\r\n      {PaAme[0]}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PrAme;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport getData from \"../Datas/FetchData\";\r\n\r\nfunction PrSki() {\r\n  const [PaSki, PaSkiF] = useState([]);\r\n\r\n  useEffect(() => {\r\n    let paski = [];\r\n    getData().then((da) => {\r\n      for (let a = 0; a < da.length; a++) {\r\n        if (da[a].ski !== undefined) {\r\n          paski.push(da[a].ski);\r\n        }\r\n      }\r\n      PaSkiF(paski);\r\n    });\r\n  }, []);\r\n  //   console.log(PaSki);\r\n  const CalWid = () => {\r\n    return PaSki.length * 151;\r\n  };\r\n\r\n  return (\r\n    <div className=\"CONTMAIN\">\r\n      <h4>Skills:</h4>\r\n      <div className=\"SKISCR\">\r\n        <div className=\"SKISHOBOARD\" style={{ width: CalWid() }}>\r\n          {PaSki.map((a, b) => (\r\n            <span key={b}>\r\n              <div className=\"SKIIMG\">\r\n                <img src={a.split(\"|\")[1]} width=\"100\" />\r\n              </div>\r\n              <div className=\"SKIPER\"></div>\r\n              <div className=\"SKINAM\">\r\n                <h5>{a.split(\"|\")[0]}</h5>\r\n              </div>\r\n            </span>\r\n          ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PrSki;\r\n","import React, { Component } from \"react\";\r\nimport getData from \"../Datas/FetchData\";\r\n\r\nclass PrExp extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      PaExp: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    let PaExp = [];\r\n    getData().then((da) => {\r\n      for (let a = 0; a < da.length; a++) {\r\n        if (da[a].exp !== undefined) {\r\n          PaExp.push(da[a].exp);\r\n        }\r\n      }\r\n      this.setState({\r\n        PaExp,\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"CONTMAIN\">\r\n        <h4>Experience:</h4>\r\n        <div className=\"EXPEER\">\r\n          <ul>\r\n            {this.state.PaExp.map((e, ex) => (\r\n              <li key={ex}>{e.split(\"|\")[0]}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PrExp;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport PrPer from \"./comps/PrPer\";\nimport PrAme from \"./comps/PrAme\";\nimport PrSki from \"./comps/PrSki\";\nimport PREXP from \"./comps/PrExp\";\n\nfunction App() {\n  return (\n    <div className=\"MAIN\">\n      {/* HanU */}\n      <PrPer />\n      <PrAme />\n      <PrSki />\n      <PREXP />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}